{"name":"Isometricr","tagline":"A tiny blob of JS for drawing isometric grids","body":"Isometricr\r\n==========\r\n\r\nA tiny bit of JS for creating isometric grids inside DOM elements.\r\n\r\nSee [example.html](example.html) for a commented example.\r\n\r\n\r\nQuick Tour\r\n----------\r\n\r\nCall the `gridify` function, passing a DOM element and the number of columns & rows to divide into:\r\n\r\n```\r\n// Draw a 18x15 grid in '#grid-area'\r\nvar gridArea = document.querySelectorAll('#grid-area')[0];\r\nwindow.Isometricr.gridify(gridArea, 18, 15)\r\n```\r\n\r\nThis will create an SVG with the following properties:\r\n- Group elements (`<g>`) for a cell in each row & column combination\r\n- Cells have the css classes of:\r\n  - `.iso-row-n` for the row they sit in\r\n  - `.iso-col-n` for the column they sit in\r\n- Path elements (`<path>`) for 4 triangles in each cell\r\n- Triangles all meet in the centre of the cell\r\n- Triangles have a CSS class indicating their position in the cell (`top-tri`, `left-tri`, `right-tri` or `bottom-tri`)\r\n\r\nAll of this should make it easier to work through which parts of your CSS you want to `fill` or `stroke` to draw something. Take a look [at the example](example.html) to see this being done.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}